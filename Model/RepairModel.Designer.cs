//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_FZA_FZG", "TR_FAHRZEUGART", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TR_FAHRZEUGART), "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_FAHRZEUG), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FZM_FZG", "TZ_FAHRZEUGMARKE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TZ_FAHRZEUGMARKE), "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_FAHRZEUG), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_NUT_FZG", "T_NUTZER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.T_NUTZER), "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_FAHRZEUG), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FZT_FMT", "TR_FAHRZEUGTYP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TR_FAHRZEUGTYP), "TZ_FAHRZEUGMARKE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.TZ_FAHRZEUGMARKE), true)]

#endregion

namespace MDP_Projekt.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Context : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Context object using the connection string found in the 'Context' section of the application configuration file.
        /// </summary>
        public Context() : base("name=Context", "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Context object.
        /// </summary>
        public Context(string connectionString) : base(connectionString, "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Context object.
        /// </summary>
        public Context(EntityConnection connection) : base(connection, "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                if ((_T_FAHRZEUG == null))
                {
                    _T_FAHRZEUG = base.CreateObjectSet<T_FAHRZEUG>("T_FAHRZEUG");
                }
                return _T_FAHRZEUG;
            }
        }
        private ObjectSet<T_FAHRZEUG> _T_FAHRZEUG;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_NUTZER> T_NUTZER
        {
            get
            {
                if ((_T_NUTZER == null))
                {
                    _T_NUTZER = base.CreateObjectSet<T_NUTZER>("T_NUTZER");
                }
                return _T_NUTZER;
            }
        }
        private ObjectSet<T_NUTZER> _T_NUTZER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_FAHRZEUGART> TR_FAHRZEUGART
        {
            get
            {
                if ((_TR_FAHRZEUGART == null))
                {
                    _TR_FAHRZEUGART = base.CreateObjectSet<TR_FAHRZEUGART>("TR_FAHRZEUGART");
                }
                return _TR_FAHRZEUGART;
            }
        }
        private ObjectSet<TR_FAHRZEUGART> _TR_FAHRZEUGART;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_FAHRZEUGTYP> TR_FAHRZEUGTYP
        {
            get
            {
                if ((_TR_FAHRZEUGTYP == null))
                {
                    _TR_FAHRZEUGTYP = base.CreateObjectSet<TR_FAHRZEUGTYP>("TR_FAHRZEUGTYP");
                }
                return _TR_FAHRZEUGTYP;
            }
        }
        private ObjectSet<TR_FAHRZEUGTYP> _TR_FAHRZEUGTYP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TZ_FAHRZEUGMARKE> TZ_FAHRZEUGMARKE
        {
            get
            {
                if ((_TZ_FAHRZEUGMARKE == null))
                {
                    _TZ_FAHRZEUGMARKE = base.CreateObjectSet<TZ_FAHRZEUGMARKE>("TZ_FAHRZEUGMARKE");
                }
                return _TZ_FAHRZEUGMARKE;
            }
        }
        private ObjectSet<TZ_FAHRZEUGMARKE> _TZ_FAHRZEUGMARKE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_ARBEIT> TR_ARBEIT
        {
            get
            {
                if ((_TR_ARBEIT == null))
                {
                    _TR_ARBEIT = base.CreateObjectSet<TR_ARBEIT>("TR_ARBEIT");
                }
                return _TR_ARBEIT;
            }
        }
        private ObjectSet<TR_ARBEIT> _TR_ARBEIT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_MATERIAL> TR_MATERIAL
        {
            get
            {
                if ((_TR_MATERIAL == null))
                {
                    _TR_MATERIAL = base.CreateObjectSet<TR_MATERIAL>("TR_MATERIAL");
                }
                return _TR_MATERIAL;
            }
        }
        private ObjectSet<TR_MATERIAL> _TR_MATERIAL;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_FAHRZEUG EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_FAHRZEUG(T_FAHRZEUG t_FAHRZEUG)
        {
            base.AddObject("T_FAHRZEUG", t_FAHRZEUG);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_NUTZER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_NUTZER(T_NUTZER t_NUTZER)
        {
            base.AddObject("T_NUTZER", t_NUTZER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_FAHRZEUGART EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_FAHRZEUGART(TR_FAHRZEUGART tR_FAHRZEUGART)
        {
            base.AddObject("TR_FAHRZEUGART", tR_FAHRZEUGART);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_FAHRZEUGTYP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_FAHRZEUGTYP(TR_FAHRZEUGTYP tR_FAHRZEUGTYP)
        {
            base.AddObject("TR_FAHRZEUGTYP", tR_FAHRZEUGTYP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TZ_FAHRZEUGMARKE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTZ_FAHRZEUGMARKE(TZ_FAHRZEUGMARKE tZ_FAHRZEUGMARKE)
        {
            base.AddObject("TZ_FAHRZEUGMARKE", tZ_FAHRZEUGMARKE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_ARBEIT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_ARBEIT(TR_ARBEIT tR_ARBEIT)
        {
            base.AddObject("TR_ARBEIT", tR_ARBEIT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_MATERIAL EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_MATERIAL(TR_MATERIAL tR_MATERIAL)
        {
            base.AddObject("TR_MATERIAL", tR_MATERIAL);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="T_FAHRZEUG")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_FAHRZEUG : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_FAHRZEUG object.
        /// </summary>
        /// <param name="fZG_ID">Initial value of the FZG_ID property.</param>
        public static T_FAHRZEUG CreateT_FAHRZEUG(global::System.Int32 fZG_ID)
        {
            T_FAHRZEUG t_FAHRZEUG = new T_FAHRZEUG();
            t_FAHRZEUG.FZG_ID = fZG_ID;
            return t_FAHRZEUG;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZG_ID
        {
            get
            {
                return _FZG_ID;
            }
            set
            {
                if (_FZG_ID != value)
                {
                    OnFZG_IDChanging(value);
                    ReportPropertyChanging("FZG_ID");
                    _FZG_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZG_ID");
                    OnFZG_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZG_ID;
        partial void OnFZG_IDChanging(global::System.Int32 value);
        partial void OnFZG_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_SCHILDNR
        {
            get
            {
                return _FZG_SCHILDNR;
            }
            set
            {
                OnFZG_SCHILDNRChanging(value);
                ReportPropertyChanging("FZG_SCHILDNR");
                _FZG_SCHILDNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_SCHILDNR");
                OnFZG_SCHILDNRChanged();
            }
        }
        private global::System.String _FZG_SCHILDNR;
        partial void OnFZG_SCHILDNRChanging(global::System.String value);
        partial void OnFZG_SCHILDNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_RAHMENNR
        {
            get
            {
                return _FZG_RAHMENNR;
            }
            set
            {
                OnFZG_RAHMENNRChanging(value);
                ReportPropertyChanging("FZG_RAHMENNR");
                _FZG_RAHMENNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_RAHMENNR");
                OnFZG_RAHMENNRChanged();
            }
        }
        private global::System.String _FZG_RAHMENNR;
        partial void OnFZG_RAHMENNRChanging(global::System.String value);
        partial void OnFZG_RAHMENNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_STAMMNR
        {
            get
            {
                return _FZG_STAMMNR;
            }
            set
            {
                OnFZG_STAMMNRChanging(value);
                ReportPropertyChanging("FZG_STAMMNR");
                _FZG_STAMMNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_STAMMNR");
                OnFZG_STAMMNRChanged();
            }
        }
        private global::System.String _FZG_STAMMNR;
        partial void OnFZG_STAMMNRChanging(global::System.String value);
        partial void OnFZG_STAMMNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FZG_ERSTEINVERKEHR
        {
            get
            {
                return _FZG_ERSTEINVERKEHR;
            }
            set
            {
                OnFZG_ERSTEINVERKEHRChanging(value);
                ReportPropertyChanging("FZG_ERSTEINVERKEHR");
                _FZG_ERSTEINVERKEHR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_ERSTEINVERKEHR");
                OnFZG_ERSTEINVERKEHRChanged();
            }
        }
        private Nullable<global::System.DateTime> _FZG_ERSTEINVERKEHR;
        partial void OnFZG_ERSTEINVERKEHRChanging(Nullable<global::System.DateTime> value);
        partial void OnFZG_ERSTEINVERKEHRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_FAHRZEUGNR
        {
            get
            {
                return _FZG_FAHRZEUGNR;
            }
            set
            {
                OnFZG_FAHRZEUGNRChanging(value);
                ReportPropertyChanging("FZG_FAHRZEUGNR");
                _FZG_FAHRZEUGNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_FAHRZEUGNR");
                OnFZG_FAHRZEUGNRChanged();
            }
        }
        private global::System.String _FZG_FAHRZEUGNR;
        partial void OnFZG_FAHRZEUGNRChanging(global::System.String value);
        partial void OnFZG_FAHRZEUGNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZG_NUT_ID
        {
            get
            {
                return _FZG_NUT_ID;
            }
            set
            {
                OnFZG_NUT_IDChanging(value);
                ReportPropertyChanging("FZG_NUT_ID");
                _FZG_NUT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_NUT_ID");
                OnFZG_NUT_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZG_NUT_ID;
        partial void OnFZG_NUT_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZG_NUT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZG_FZA_ID
        {
            get
            {
                return _FZG_FZA_ID;
            }
            set
            {
                OnFZG_FZA_IDChanging(value);
                ReportPropertyChanging("FZG_FZA_ID");
                _FZG_FZA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_FZA_ID");
                OnFZG_FZA_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZG_FZA_ID;
        partial void OnFZG_FZA_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZG_FZA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZG_FZM_ID
        {
            get
            {
                return _FZG_FZM_ID;
            }
            set
            {
                OnFZG_FZM_IDChanging(value);
                ReportPropertyChanging("FZG_FZM_ID");
                _FZG_FZM_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_FZM_ID");
                OnFZG_FZM_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZG_FZM_ID;
        partial void OnFZG_FZM_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZG_FZM_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZA_FZG", "TR_FAHRZEUGART")]
        public TR_FAHRZEUGART TR_FAHRZEUGART
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TR_FAHRZEUGART> TR_FAHRZEUGARTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZM_FZG", "TZ_FAHRZEUGMARKE")]
        public TZ_FAHRZEUGMARKE TZ_FAHRZEUGMARKE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TZ_FAHRZEUGMARKE>("Model.FK_FZM_FZG", "TZ_FAHRZEUGMARKE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TZ_FAHRZEUGMARKE>("Model.FK_FZM_FZG", "TZ_FAHRZEUGMARKE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TZ_FAHRZEUGMARKE> TZ_FAHRZEUGMARKEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TZ_FAHRZEUGMARKE>("Model.FK_FZM_FZG", "TZ_FAHRZEUGMARKE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TZ_FAHRZEUGMARKE>("Model.FK_FZM_FZG", "TZ_FAHRZEUGMARKE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_NUT_FZG", "T_NUTZER")]
        public T_NUTZER T_NUTZER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_NUTZER> T_NUTZERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="T_NUTZER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_NUTZER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_NUTZER object.
        /// </summary>
        /// <param name="nUT_ID">Initial value of the NUT_ID property.</param>
        /// <param name="nUT_NAME">Initial value of the NUT_NAME property.</param>
        public static T_NUTZER CreateT_NUTZER(global::System.Int32 nUT_ID, global::System.String nUT_NAME)
        {
            T_NUTZER t_NUTZER = new T_NUTZER();
            t_NUTZER.NUT_ID = nUT_ID;
            t_NUTZER.NUT_NAME = nUT_NAME;
            return t_NUTZER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUT_ID
        {
            get
            {
                return _NUT_ID;
            }
            set
            {
                if (_NUT_ID != value)
                {
                    OnNUT_IDChanging(value);
                    ReportPropertyChanging("NUT_ID");
                    _NUT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NUT_ID");
                    OnNUT_IDChanged();
                }
            }
        }
        private global::System.Int32 _NUT_ID;
        partial void OnNUT_IDChanging(global::System.Int32 value);
        partial void OnNUT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NUT_NAME
        {
            get
            {
                return _NUT_NAME;
            }
            set
            {
                OnNUT_NAMEChanging(value);
                ReportPropertyChanging("NUT_NAME");
                _NUT_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NUT_NAME");
                OnNUT_NAMEChanged();
            }
        }
        private global::System.String _NUT_NAME;
        partial void OnNUT_NAMEChanging(global::System.String value);
        partial void OnNUT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NUT_PLZ
        {
            get
            {
                return _NUT_PLZ;
            }
            set
            {
                OnNUT_PLZChanging(value);
                ReportPropertyChanging("NUT_PLZ");
                _NUT_PLZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUT_PLZ");
                OnNUT_PLZChanged();
            }
        }
        private Nullable<global::System.Int32> _NUT_PLZ;
        partial void OnNUT_PLZChanging(Nullable<global::System.Int32> value);
        partial void OnNUT_PLZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NUT_ORT
        {
            get
            {
                return _NUT_ORT;
            }
            set
            {
                OnNUT_ORTChanging(value);
                ReportPropertyChanging("NUT_ORT");
                _NUT_ORT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NUT_ORT");
                OnNUT_ORTChanged();
            }
        }
        private global::System.String _NUT_ORT;
        partial void OnNUT_ORTChanging(global::System.String value);
        partial void OnNUT_ORTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_NUT_FZG", "T_FAHRZEUG")]
        public EntityCollection<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_FAHRZEUG>("Model.FK_NUT_FZG", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_FAHRZEUG>("Model.FK_NUT_FZG", "T_FAHRZEUG", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_ARBEIT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_ARBEIT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_ARBEIT object.
        /// </summary>
        /// <param name="aRB_ID">Initial value of the ARB_ID property.</param>
        public static TR_ARBEIT CreateTR_ARBEIT(global::System.Int32 aRB_ID)
        {
            TR_ARBEIT tR_ARBEIT = new TR_ARBEIT();
            tR_ARBEIT.ARB_ID = aRB_ID;
            return tR_ARBEIT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ARB_ID
        {
            get
            {
                return _ARB_ID;
            }
            set
            {
                if (_ARB_ID != value)
                {
                    OnARB_IDChanging(value);
                    ReportPropertyChanging("ARB_ID");
                    _ARB_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ARB_ID");
                    OnARB_IDChanged();
                }
            }
        }
        private global::System.Int32 _ARB_ID;
        partial void OnARB_IDChanging(global::System.Int32 value);
        partial void OnARB_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ARB_BEZEICHNUNG
        {
            get
            {
                return _ARB_BEZEICHNUNG;
            }
            set
            {
                OnARB_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("ARB_BEZEICHNUNG");
                _ARB_BEZEICHNUNG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ARB_BEZEICHNUNG");
                OnARB_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _ARB_BEZEICHNUNG;
        partial void OnARB_BEZEICHNUNGChanging(global::System.String value);
        partial void OnARB_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ARB_PREIS
        {
            get
            {
                return _ARB_PREIS;
            }
            set
            {
                OnARB_PREISChanging(value);
                ReportPropertyChanging("ARB_PREIS");
                _ARB_PREIS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ARB_PREIS");
                OnARB_PREISChanged();
            }
        }
        private Nullable<global::System.Decimal> _ARB_PREIS;
        partial void OnARB_PREISChanging(Nullable<global::System.Decimal> value);
        partial void OnARB_PREISChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_FAHRZEUGART")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_FAHRZEUGART : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_FAHRZEUGART object.
        /// </summary>
        /// <param name="fZA_ID">Initial value of the FZA_ID property.</param>
        /// <param name="fZA_BEZEICHNUNG">Initial value of the FZA_BEZEICHNUNG property.</param>
        /// <param name="fZA_KEY">Initial value of the FZA_KEY property.</param>
        public static TR_FAHRZEUGART CreateTR_FAHRZEUGART(global::System.Int32 fZA_ID, global::System.String fZA_BEZEICHNUNG, global::System.String fZA_KEY)
        {
            TR_FAHRZEUGART tR_FAHRZEUGART = new TR_FAHRZEUGART();
            tR_FAHRZEUGART.FZA_ID = fZA_ID;
            tR_FAHRZEUGART.FZA_BEZEICHNUNG = fZA_BEZEICHNUNG;
            tR_FAHRZEUGART.FZA_KEY = fZA_KEY;
            return tR_FAHRZEUGART;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZA_ID
        {
            get
            {
                return _FZA_ID;
            }
            set
            {
                if (_FZA_ID != value)
                {
                    OnFZA_IDChanging(value);
                    ReportPropertyChanging("FZA_ID");
                    _FZA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZA_ID");
                    OnFZA_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZA_ID;
        partial void OnFZA_IDChanging(global::System.Int32 value);
        partial void OnFZA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FZA_BEZEICHNUNG
        {
            get
            {
                return _FZA_BEZEICHNUNG;
            }
            set
            {
                OnFZA_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("FZA_BEZEICHNUNG");
                _FZA_BEZEICHNUNG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FZA_BEZEICHNUNG");
                OnFZA_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _FZA_BEZEICHNUNG;
        partial void OnFZA_BEZEICHNUNGChanging(global::System.String value);
        partial void OnFZA_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FZA_KEY
        {
            get
            {
                return _FZA_KEY;
            }
            set
            {
                OnFZA_KEYChanging(value);
                ReportPropertyChanging("FZA_KEY");
                _FZA_KEY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FZA_KEY");
                OnFZA_KEYChanged();
            }
        }
        private global::System.String _FZA_KEY;
        partial void OnFZA_KEYChanging(global::System.String value);
        partial void OnFZA_KEYChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZA_FZG", "T_FAHRZEUG")]
        public EntityCollection<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_FAHRZEUG>("Model.FK_FZA_FZG", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_FAHRZEUG>("Model.FK_FZA_FZG", "T_FAHRZEUG", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_FAHRZEUGTYP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_FAHRZEUGTYP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_FAHRZEUGTYP object.
        /// </summary>
        /// <param name="fZT_ID">Initial value of the FZT_ID property.</param>
        /// <param name="fZT_BEZEICHNUNG">Initial value of the FZT_BEZEICHNUNG property.</param>
        public static TR_FAHRZEUGTYP CreateTR_FAHRZEUGTYP(global::System.Int32 fZT_ID, global::System.String fZT_BEZEICHNUNG)
        {
            TR_FAHRZEUGTYP tR_FAHRZEUGTYP = new TR_FAHRZEUGTYP();
            tR_FAHRZEUGTYP.FZT_ID = fZT_ID;
            tR_FAHRZEUGTYP.FZT_BEZEICHNUNG = fZT_BEZEICHNUNG;
            return tR_FAHRZEUGTYP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZT_ID
        {
            get
            {
                return _FZT_ID;
            }
            set
            {
                if (_FZT_ID != value)
                {
                    OnFZT_IDChanging(value);
                    ReportPropertyChanging("FZT_ID");
                    _FZT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZT_ID");
                    OnFZT_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZT_ID;
        partial void OnFZT_IDChanging(global::System.Int32 value);
        partial void OnFZT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FZT_BEZEICHNUNG
        {
            get
            {
                return _FZT_BEZEICHNUNG;
            }
            set
            {
                OnFZT_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("FZT_BEZEICHNUNG");
                _FZT_BEZEICHNUNG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FZT_BEZEICHNUNG");
                OnFZT_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _FZT_BEZEICHNUNG;
        partial void OnFZT_BEZEICHNUNGChanging(global::System.String value);
        partial void OnFZT_BEZEICHNUNGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZT_FMT", "TZ_FAHRZEUGMARKE")]
        public EntityCollection<TZ_FAHRZEUGMARKE> TZ_FAHRZEUGMARKE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TZ_FAHRZEUGMARKE>("Model.FK_FZT_FMT", "TZ_FAHRZEUGMARKE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TZ_FAHRZEUGMARKE>("Model.FK_FZT_FMT", "TZ_FAHRZEUGMARKE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_MATERIAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_MATERIAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_MATERIAL object.
        /// </summary>
        /// <param name="mAT_ID">Initial value of the MAT_ID property.</param>
        public static TR_MATERIAL CreateTR_MATERIAL(global::System.Int32 mAT_ID)
        {
            TR_MATERIAL tR_MATERIAL = new TR_MATERIAL();
            tR_MATERIAL.MAT_ID = mAT_ID;
            return tR_MATERIAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MAT_ID
        {
            get
            {
                return _MAT_ID;
            }
            set
            {
                if (_MAT_ID != value)
                {
                    OnMAT_IDChanging(value);
                    ReportPropertyChanging("MAT_ID");
                    _MAT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MAT_ID");
                    OnMAT_IDChanged();
                }
            }
        }
        private global::System.Int32 _MAT_ID;
        partial void OnMAT_IDChanging(global::System.Int32 value);
        partial void OnMAT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MAT_BEZEICHNUNG
        {
            get
            {
                return _MAT_BEZEICHNUNG;
            }
            set
            {
                OnMAT_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("MAT_BEZEICHNUNG");
                _MAT_BEZEICHNUNG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MAT_BEZEICHNUNG");
                OnMAT_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _MAT_BEZEICHNUNG;
        partial void OnMAT_BEZEICHNUNGChanging(global::System.String value);
        partial void OnMAT_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MAT_PREIS
        {
            get
            {
                return _MAT_PREIS;
            }
            set
            {
                OnMAT_PREISChanging(value);
                ReportPropertyChanging("MAT_PREIS");
                _MAT_PREIS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAT_PREIS");
                OnMAT_PREISChanged();
            }
        }
        private Nullable<global::System.Decimal> _MAT_PREIS;
        partial void OnMAT_PREISChanging(Nullable<global::System.Decimal> value);
        partial void OnMAT_PREISChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MAT_MARGE
        {
            get
            {
                return _MAT_MARGE;
            }
            set
            {
                OnMAT_MARGEChanging(value);
                ReportPropertyChanging("MAT_MARGE");
                _MAT_MARGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAT_MARGE");
                OnMAT_MARGEChanged();
            }
        }
        private Nullable<global::System.Decimal> _MAT_MARGE;
        partial void OnMAT_MARGEChanging(Nullable<global::System.Decimal> value);
        partial void OnMAT_MARGEChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TZ_FAHRZEUGMARKE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TZ_FAHRZEUGMARKE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TZ_FAHRZEUGMARKE object.
        /// </summary>
        /// <param name="fZM_ID">Initial value of the FZM_ID property.</param>
        public static TZ_FAHRZEUGMARKE CreateTZ_FAHRZEUGMARKE(global::System.Int32 fZM_ID)
        {
            TZ_FAHRZEUGMARKE tZ_FAHRZEUGMARKE = new TZ_FAHRZEUGMARKE();
            tZ_FAHRZEUGMARKE.FZM_ID = fZM_ID;
            return tZ_FAHRZEUGMARKE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZM_ID
        {
            get
            {
                return _FZM_ID;
            }
            set
            {
                if (_FZM_ID != value)
                {
                    OnFZM_IDChanging(value);
                    ReportPropertyChanging("FZM_ID");
                    _FZM_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZM_ID");
                    OnFZM_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZM_ID;
        partial void OnFZM_IDChanging(global::System.Int32 value);
        partial void OnFZM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZM_BEZEICHNUNG
        {
            get
            {
                return _FZM_BEZEICHNUNG;
            }
            set
            {
                OnFZM_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("FZM_BEZEICHNUNG");
                _FZM_BEZEICHNUNG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZM_BEZEICHNUNG");
                OnFZM_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _FZM_BEZEICHNUNG;
        partial void OnFZM_BEZEICHNUNGChanging(global::System.String value);
        partial void OnFZM_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZM_FZT_ID
        {
            get
            {
                return _FZM_FZT_ID;
            }
            set
            {
                OnFZM_FZT_IDChanging(value);
                ReportPropertyChanging("FZM_FZT_ID");
                _FZM_FZT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZM_FZT_ID");
                OnFZM_FZT_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZM_FZT_ID;
        partial void OnFZM_FZT_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZM_FZT_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZM_FZG", "T_FAHRZEUG")]
        public EntityCollection<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_FAHRZEUG>("Model.FK_FZM_FZG", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_FAHRZEUG>("Model.FK_FZM_FZG", "T_FAHRZEUG", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZT_FMT", "TR_FAHRZEUGTYP")]
        public TR_FAHRZEUGTYP TR_FAHRZEUGTYP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGTYP>("Model.FK_FZT_FMT", "TR_FAHRZEUGTYP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGTYP>("Model.FK_FZT_FMT", "TR_FAHRZEUGTYP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TR_FAHRZEUGTYP> TR_FAHRZEUGTYPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGTYP>("Model.FK_FZT_FMT", "TR_FAHRZEUGTYP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TR_FAHRZEUGTYP>("Model.FK_FZT_FMT", "TR_FAHRZEUGTYP", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
