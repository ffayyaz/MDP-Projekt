//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_FZA_FZG", "TR_FAHRZEUGART", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TR_FAHRZEUGART), "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_FAHRZEUG), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FZG_REP", "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.T_FAHRZEUG), "T_REPARATUR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_REPARATUR), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FZT_FZG", "TZ_FAHRZEUGTYP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TZ_FAHRZEUGTYP), "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_FAHRZEUG), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_NUT_FZG", "T_NUTZER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.T_NUTZER), "T_FAHRZEUG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.T_FAHRZEUG), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_REP_ABL", "T_REPARATUR", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.T_REPARATUR), "TZ_ARBEITLISTE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.TZ_ARBEITLISTE), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_REP_MTL", "T_REPARATUR", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.T_REPARATUR), "TZ_MATERIALLISTE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.TZ_MATERIALLISTE), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ARB_ABL", "TR_ARBEIT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TR_ARBEIT), "TZ_ARBEITLISTE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.TZ_ARBEITLISTE), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FZM_FZT", "TR_FAHRZEUGMARKE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TR_FAHRZEUGMARKE), "TZ_FAHRZEUGTYP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.TZ_FAHRZEUGTYP), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_MAT_MTL", "TR_MATERIAL", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDP_Projekt.Model.TR_MATERIAL), "TZ_MATERIALLISTE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDP_Projekt.Model.TZ_MATERIALLISTE), true)]

#endregion

namespace MDP_Projekt.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Context : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Context object using the connection string found in the 'Context' section of the application configuration file.
        /// </summary>
        public Context() : base("name=Context", "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Context object.
        /// </summary>
        public Context(string connectionString) : base(connectionString, "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Context object.
        /// </summary>
        public Context(EntityConnection connection) : base(connection, "Context")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                if ((_T_FAHRZEUG == null))
                {
                    _T_FAHRZEUG = base.CreateObjectSet<T_FAHRZEUG>("T_FAHRZEUG");
                }
                return _T_FAHRZEUG;
            }
        }
        private ObjectSet<T_FAHRZEUG> _T_FAHRZEUG;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_NUTZER> T_NUTZER
        {
            get
            {
                if ((_T_NUTZER == null))
                {
                    _T_NUTZER = base.CreateObjectSet<T_NUTZER>("T_NUTZER");
                }
                return _T_NUTZER;
            }
        }
        private ObjectSet<T_NUTZER> _T_NUTZER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_REPARATUR> T_REPARATUR
        {
            get
            {
                if ((_T_REPARATUR == null))
                {
                    _T_REPARATUR = base.CreateObjectSet<T_REPARATUR>("T_REPARATUR");
                }
                return _T_REPARATUR;
            }
        }
        private ObjectSet<T_REPARATUR> _T_REPARATUR;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_ARBEIT> TR_ARBEIT
        {
            get
            {
                if ((_TR_ARBEIT == null))
                {
                    _TR_ARBEIT = base.CreateObjectSet<TR_ARBEIT>("TR_ARBEIT");
                }
                return _TR_ARBEIT;
            }
        }
        private ObjectSet<TR_ARBEIT> _TR_ARBEIT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_FAHRZEUGART> TR_FAHRZEUGART
        {
            get
            {
                if ((_TR_FAHRZEUGART == null))
                {
                    _TR_FAHRZEUGART = base.CreateObjectSet<TR_FAHRZEUGART>("TR_FAHRZEUGART");
                }
                return _TR_FAHRZEUGART;
            }
        }
        private ObjectSet<TR_FAHRZEUGART> _TR_FAHRZEUGART;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_FAHRZEUGMARKE> TR_FAHRZEUGMARKE
        {
            get
            {
                if ((_TR_FAHRZEUGMARKE == null))
                {
                    _TR_FAHRZEUGMARKE = base.CreateObjectSet<TR_FAHRZEUGMARKE>("TR_FAHRZEUGMARKE");
                }
                return _TR_FAHRZEUGMARKE;
            }
        }
        private ObjectSet<TR_FAHRZEUGMARKE> _TR_FAHRZEUGMARKE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TR_MATERIAL> TR_MATERIAL
        {
            get
            {
                if ((_TR_MATERIAL == null))
                {
                    _TR_MATERIAL = base.CreateObjectSet<TR_MATERIAL>("TR_MATERIAL");
                }
                return _TR_MATERIAL;
            }
        }
        private ObjectSet<TR_MATERIAL> _TR_MATERIAL;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TZ_ARBEITLISTE> TZ_ARBEITLISTE
        {
            get
            {
                if ((_TZ_ARBEITLISTE == null))
                {
                    _TZ_ARBEITLISTE = base.CreateObjectSet<TZ_ARBEITLISTE>("TZ_ARBEITLISTE");
                }
                return _TZ_ARBEITLISTE;
            }
        }
        private ObjectSet<TZ_ARBEITLISTE> _TZ_ARBEITLISTE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TZ_FAHRZEUGTYP> TZ_FAHRZEUGTYP
        {
            get
            {
                if ((_TZ_FAHRZEUGTYP == null))
                {
                    _TZ_FAHRZEUGTYP = base.CreateObjectSet<TZ_FAHRZEUGTYP>("TZ_FAHRZEUGTYP");
                }
                return _TZ_FAHRZEUGTYP;
            }
        }
        private ObjectSet<TZ_FAHRZEUGTYP> _TZ_FAHRZEUGTYP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TZ_MATERIALLISTE> TZ_MATERIALLISTE
        {
            get
            {
                if ((_TZ_MATERIALLISTE == null))
                {
                    _TZ_MATERIALLISTE = base.CreateObjectSet<TZ_MATERIALLISTE>("TZ_MATERIALLISTE");
                }
                return _TZ_MATERIALLISTE;
            }
        }
        private ObjectSet<TZ_MATERIALLISTE> _TZ_MATERIALLISTE;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_FAHRZEUG EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_FAHRZEUG(T_FAHRZEUG t_FAHRZEUG)
        {
            base.AddObject("T_FAHRZEUG", t_FAHRZEUG);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_NUTZER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_NUTZER(T_NUTZER t_NUTZER)
        {
            base.AddObject("T_NUTZER", t_NUTZER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_REPARATUR EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_REPARATUR(T_REPARATUR t_REPARATUR)
        {
            base.AddObject("T_REPARATUR", t_REPARATUR);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_ARBEIT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_ARBEIT(TR_ARBEIT tR_ARBEIT)
        {
            base.AddObject("TR_ARBEIT", tR_ARBEIT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_FAHRZEUGART EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_FAHRZEUGART(TR_FAHRZEUGART tR_FAHRZEUGART)
        {
            base.AddObject("TR_FAHRZEUGART", tR_FAHRZEUGART);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_FAHRZEUGMARKE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_FAHRZEUGMARKE(TR_FAHRZEUGMARKE tR_FAHRZEUGMARKE)
        {
            base.AddObject("TR_FAHRZEUGMARKE", tR_FAHRZEUGMARKE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TR_MATERIAL EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTR_MATERIAL(TR_MATERIAL tR_MATERIAL)
        {
            base.AddObject("TR_MATERIAL", tR_MATERIAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TZ_ARBEITLISTE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTZ_ARBEITLISTE(TZ_ARBEITLISTE tZ_ARBEITLISTE)
        {
            base.AddObject("TZ_ARBEITLISTE", tZ_ARBEITLISTE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TZ_FAHRZEUGTYP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTZ_FAHRZEUGTYP(TZ_FAHRZEUGTYP tZ_FAHRZEUGTYP)
        {
            base.AddObject("TZ_FAHRZEUGTYP", tZ_FAHRZEUGTYP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TZ_MATERIALLISTE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTZ_MATERIALLISTE(TZ_MATERIALLISTE tZ_MATERIALLISTE)
        {
            base.AddObject("TZ_MATERIALLISTE", tZ_MATERIALLISTE);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="T_FAHRZEUG")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_FAHRZEUG : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_FAHRZEUG object.
        /// </summary>
        /// <param name="fZG_ID">Initial value of the FZG_ID property.</param>
        public static T_FAHRZEUG CreateT_FAHRZEUG(global::System.Int32 fZG_ID)
        {
            T_FAHRZEUG t_FAHRZEUG = new T_FAHRZEUG();
            t_FAHRZEUG.FZG_ID = fZG_ID;
            return t_FAHRZEUG;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZG_ID
        {
            get
            {
                return _FZG_ID;
            }
            set
            {
                if (_FZG_ID != value)
                {
                    OnFZG_IDChanging(value);
                    ReportPropertyChanging("FZG_ID");
                    _FZG_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZG_ID");
                    OnFZG_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZG_ID;
        partial void OnFZG_IDChanging(global::System.Int32 value);
        partial void OnFZG_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_SCHILDNR
        {
            get
            {
                return _FZG_SCHILDNR;
            }
            set
            {
                OnFZG_SCHILDNRChanging(value);
                ReportPropertyChanging("FZG_SCHILDNR");
                _FZG_SCHILDNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_SCHILDNR");
                OnFZG_SCHILDNRChanged();
            }
        }
        private global::System.String _FZG_SCHILDNR;
        partial void OnFZG_SCHILDNRChanging(global::System.String value);
        partial void OnFZG_SCHILDNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_RAHMENNR
        {
            get
            {
                return _FZG_RAHMENNR;
            }
            set
            {
                OnFZG_RAHMENNRChanging(value);
                ReportPropertyChanging("FZG_RAHMENNR");
                _FZG_RAHMENNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_RAHMENNR");
                OnFZG_RAHMENNRChanged();
            }
        }
        private global::System.String _FZG_RAHMENNR;
        partial void OnFZG_RAHMENNRChanging(global::System.String value);
        partial void OnFZG_RAHMENNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_STAMMNR
        {
            get
            {
                return _FZG_STAMMNR;
            }
            set
            {
                OnFZG_STAMMNRChanging(value);
                ReportPropertyChanging("FZG_STAMMNR");
                _FZG_STAMMNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_STAMMNR");
                OnFZG_STAMMNRChanged();
            }
        }
        private global::System.String _FZG_STAMMNR;
        partial void OnFZG_STAMMNRChanging(global::System.String value);
        partial void OnFZG_STAMMNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FZG_ERSTEINVERKEHR
        {
            get
            {
                return _FZG_ERSTEINVERKEHR;
            }
            set
            {
                OnFZG_ERSTEINVERKEHRChanging(value);
                ReportPropertyChanging("FZG_ERSTEINVERKEHR");
                _FZG_ERSTEINVERKEHR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_ERSTEINVERKEHR");
                OnFZG_ERSTEINVERKEHRChanged();
            }
        }
        private Nullable<global::System.DateTime> _FZG_ERSTEINVERKEHR;
        partial void OnFZG_ERSTEINVERKEHRChanging(Nullable<global::System.DateTime> value);
        partial void OnFZG_ERSTEINVERKEHRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZG_FAHRZEUGNR
        {
            get
            {
                return _FZG_FAHRZEUGNR;
            }
            set
            {
                OnFZG_FAHRZEUGNRChanging(value);
                ReportPropertyChanging("FZG_FAHRZEUGNR");
                _FZG_FAHRZEUGNR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZG_FAHRZEUGNR");
                OnFZG_FAHRZEUGNRChanged();
            }
        }
        private global::System.String _FZG_FAHRZEUGNR;
        partial void OnFZG_FAHRZEUGNRChanging(global::System.String value);
        partial void OnFZG_FAHRZEUGNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZG_NUT_ID
        {
            get
            {
                return _FZG_NUT_ID;
            }
            set
            {
                OnFZG_NUT_IDChanging(value);
                ReportPropertyChanging("FZG_NUT_ID");
                _FZG_NUT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_NUT_ID");
                OnFZG_NUT_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZG_NUT_ID;
        partial void OnFZG_NUT_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZG_NUT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZG_FZA_ID
        {
            get
            {
                return _FZG_FZA_ID;
            }
            set
            {
                OnFZG_FZA_IDChanging(value);
                ReportPropertyChanging("FZG_FZA_ID");
                _FZG_FZA_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_FZA_ID");
                OnFZG_FZA_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZG_FZA_ID;
        partial void OnFZG_FZA_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZG_FZA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZG_FZT_ID
        {
            get
            {
                return _FZG_FZT_ID;
            }
            set
            {
                OnFZG_FZT_IDChanging(value);
                ReportPropertyChanging("FZG_FZT_ID");
                _FZG_FZT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZG_FZT_ID");
                OnFZG_FZT_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZG_FZT_ID;
        partial void OnFZG_FZT_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZG_FZT_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZA_FZG", "TR_FAHRZEUGART")]
        public TR_FAHRZEUGART TR_FAHRZEUGART
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TR_FAHRZEUGART> TR_FAHRZEUGARTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TR_FAHRZEUGART>("Model.FK_FZA_FZG", "TR_FAHRZEUGART", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZG_REP", "T_REPARATUR")]
        public EntityCollection<T_REPARATUR> T_REPARATUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_REPARATUR>("Model.FK_FZG_REP", "T_REPARATUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_REPARATUR>("Model.FK_FZG_REP", "T_REPARATUR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZT_FZG", "TZ_FAHRZEUGTYP")]
        public TZ_FAHRZEUGTYP TZ_FAHRZEUGTYP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TZ_FAHRZEUGTYP>("Model.FK_FZT_FZG", "TZ_FAHRZEUGTYP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TZ_FAHRZEUGTYP>("Model.FK_FZT_FZG", "TZ_FAHRZEUGTYP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TZ_FAHRZEUGTYP> TZ_FAHRZEUGTYPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TZ_FAHRZEUGTYP>("Model.FK_FZT_FZG", "TZ_FAHRZEUGTYP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TZ_FAHRZEUGTYP>("Model.FK_FZT_FZG", "TZ_FAHRZEUGTYP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_NUT_FZG", "T_NUTZER")]
        public T_NUTZER T_NUTZER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_NUTZER> T_NUTZERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_NUTZER>("Model.FK_NUT_FZG", "T_NUTZER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="T_NUTZER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_NUTZER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_NUTZER object.
        /// </summary>
        /// <param name="nUT_ID">Initial value of the NUT_ID property.</param>
        /// <param name="nUT_NAME">Initial value of the NUT_NAME property.</param>
        public static T_NUTZER CreateT_NUTZER(global::System.Int32 nUT_ID, global::System.String nUT_NAME)
        {
            T_NUTZER t_NUTZER = new T_NUTZER();
            t_NUTZER.NUT_ID = nUT_ID;
            t_NUTZER.NUT_NAME = nUT_NAME;
            return t_NUTZER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NUT_ID
        {
            get
            {
                return _NUT_ID;
            }
            set
            {
                if (_NUT_ID != value)
                {
                    OnNUT_IDChanging(value);
                    ReportPropertyChanging("NUT_ID");
                    _NUT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NUT_ID");
                    OnNUT_IDChanged();
                }
            }
        }
        private global::System.Int32 _NUT_ID;
        partial void OnNUT_IDChanging(global::System.Int32 value);
        partial void OnNUT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NUT_NAME
        {
            get
            {
                return _NUT_NAME;
            }
            set
            {
                OnNUT_NAMEChanging(value);
                ReportPropertyChanging("NUT_NAME");
                _NUT_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NUT_NAME");
                OnNUT_NAMEChanged();
            }
        }
        private global::System.String _NUT_NAME;
        partial void OnNUT_NAMEChanging(global::System.String value);
        partial void OnNUT_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NUT_PLZ
        {
            get
            {
                return _NUT_PLZ;
            }
            set
            {
                OnNUT_PLZChanging(value);
                ReportPropertyChanging("NUT_PLZ");
                _NUT_PLZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NUT_PLZ");
                OnNUT_PLZChanged();
            }
        }
        private Nullable<global::System.Int32> _NUT_PLZ;
        partial void OnNUT_PLZChanging(Nullable<global::System.Int32> value);
        partial void OnNUT_PLZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NUT_ORT
        {
            get
            {
                return _NUT_ORT;
            }
            set
            {
                OnNUT_ORTChanging(value);
                ReportPropertyChanging("NUT_ORT");
                _NUT_ORT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NUT_ORT");
                OnNUT_ORTChanged();
            }
        }
        private global::System.String _NUT_ORT;
        partial void OnNUT_ORTChanging(global::System.String value);
        partial void OnNUT_ORTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_NUT_FZG", "T_FAHRZEUG")]
        public EntityCollection<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_FAHRZEUG>("Model.FK_NUT_FZG", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_FAHRZEUG>("Model.FK_NUT_FZG", "T_FAHRZEUG", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="T_REPARATUR")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_REPARATUR : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_REPARATUR object.
        /// </summary>
        /// <param name="rEP_ID">Initial value of the REP_ID property.</param>
        public static T_REPARATUR CreateT_REPARATUR(global::System.Int32 rEP_ID)
        {
            T_REPARATUR t_REPARATUR = new T_REPARATUR();
            t_REPARATUR.REP_ID = rEP_ID;
            return t_REPARATUR;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 REP_ID
        {
            get
            {
                return _REP_ID;
            }
            set
            {
                if (_REP_ID != value)
                {
                    OnREP_IDChanging(value);
                    ReportPropertyChanging("REP_ID");
                    _REP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("REP_ID");
                    OnREP_IDChanged();
                }
            }
        }
        private global::System.Int32 _REP_ID;
        partial void OnREP_IDChanging(global::System.Int32 value);
        partial void OnREP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String REP_DISPONR
        {
            get
            {
                return _REP_DISPONR;
            }
            set
            {
                OnREP_DISPONRChanging(value);
                ReportPropertyChanging("REP_DISPONR");
                _REP_DISPONR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("REP_DISPONR");
                OnREP_DISPONRChanged();
            }
        }
        private global::System.String _REP_DISPONR;
        partial void OnREP_DISPONRChanging(global::System.String value);
        partial void OnREP_DISPONRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> REP_EINGANG
        {
            get
            {
                return _REP_EINGANG;
            }
            set
            {
                OnREP_EINGANGChanging(value);
                ReportPropertyChanging("REP_EINGANG");
                _REP_EINGANG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REP_EINGANG");
                OnREP_EINGANGChanged();
            }
        }
        private Nullable<global::System.DateTime> _REP_EINGANG;
        partial void OnREP_EINGANGChanging(Nullable<global::System.DateTime> value);
        partial void OnREP_EINGANGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> REP_AUSGANG
        {
            get
            {
                return _REP_AUSGANG;
            }
            set
            {
                OnREP_AUSGANGChanging(value);
                ReportPropertyChanging("REP_AUSGANG");
                _REP_AUSGANG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REP_AUSGANG");
                OnREP_AUSGANGChanged();
            }
        }
        private Nullable<global::System.DateTime> _REP_AUSGANG;
        partial void OnREP_AUSGANGChanging(Nullable<global::System.DateTime> value);
        partial void OnREP_AUSGANGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> REP_RECHNUNGSNR
        {
            get
            {
                return _REP_RECHNUNGSNR;
            }
            set
            {
                OnREP_RECHNUNGSNRChanging(value);
                ReportPropertyChanging("REP_RECHNUNGSNR");
                _REP_RECHNUNGSNR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REP_RECHNUNGSNR");
                OnREP_RECHNUNGSNRChanged();
            }
        }
        private Nullable<global::System.Int32> _REP_RECHNUNGSNR;
        partial void OnREP_RECHNUNGSNRChanging(Nullable<global::System.Int32> value);
        partial void OnREP_RECHNUNGSNRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> REP_FAHRZEUGKM
        {
            get
            {
                return _REP_FAHRZEUGKM;
            }
            set
            {
                OnREP_FAHRZEUGKMChanging(value);
                ReportPropertyChanging("REP_FAHRZEUGKM");
                _REP_FAHRZEUGKM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REP_FAHRZEUGKM");
                OnREP_FAHRZEUGKMChanged();
            }
        }
        private Nullable<global::System.Int32> _REP_FAHRZEUGKM;
        partial void OnREP_FAHRZEUGKMChanging(Nullable<global::System.Int32> value);
        partial void OnREP_FAHRZEUGKMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> REP_FZG_ID
        {
            get
            {
                return _REP_FZG_ID;
            }
            set
            {
                OnREP_FZG_IDChanging(value);
                ReportPropertyChanging("REP_FZG_ID");
                _REP_FZG_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("REP_FZG_ID");
                OnREP_FZG_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _REP_FZG_ID;
        partial void OnREP_FZG_IDChanging(Nullable<global::System.Int32> value);
        partial void OnREP_FZG_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZG_REP", "T_FAHRZEUG")]
        public T_FAHRZEUG T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_FAHRZEUG>("Model.FK_FZG_REP", "T_FAHRZEUG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_FAHRZEUG>("Model.FK_FZG_REP", "T_FAHRZEUG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_FAHRZEUG> T_FAHRZEUGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_FAHRZEUG>("Model.FK_FZG_REP", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_FAHRZEUG>("Model.FK_FZG_REP", "T_FAHRZEUG", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_REP_ABL", "TZ_ARBEITLISTE")]
        public EntityCollection<TZ_ARBEITLISTE> TZ_ARBEITLISTE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TZ_ARBEITLISTE>("Model.FK_REP_ABL", "TZ_ARBEITLISTE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TZ_ARBEITLISTE>("Model.FK_REP_ABL", "TZ_ARBEITLISTE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_REP_MTL", "TZ_MATERIALLISTE")]
        public EntityCollection<TZ_MATERIALLISTE> TZ_MATERIALLISTE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TZ_MATERIALLISTE>("Model.FK_REP_MTL", "TZ_MATERIALLISTE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TZ_MATERIALLISTE>("Model.FK_REP_MTL", "TZ_MATERIALLISTE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_ARBEIT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_ARBEIT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_ARBEIT object.
        /// </summary>
        /// <param name="aRB_ID">Initial value of the ARB_ID property.</param>
        public static TR_ARBEIT CreateTR_ARBEIT(global::System.Int32 aRB_ID)
        {
            TR_ARBEIT tR_ARBEIT = new TR_ARBEIT();
            tR_ARBEIT.ARB_ID = aRB_ID;
            return tR_ARBEIT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ARB_ID
        {
            get
            {
                return _ARB_ID;
            }
            set
            {
                if (_ARB_ID != value)
                {
                    OnARB_IDChanging(value);
                    ReportPropertyChanging("ARB_ID");
                    _ARB_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ARB_ID");
                    OnARB_IDChanged();
                }
            }
        }
        private global::System.Int32 _ARB_ID;
        partial void OnARB_IDChanging(global::System.Int32 value);
        partial void OnARB_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ARB_BEZEICHNUNG
        {
            get
            {
                return _ARB_BEZEICHNUNG;
            }
            set
            {
                OnARB_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("ARB_BEZEICHNUNG");
                _ARB_BEZEICHNUNG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ARB_BEZEICHNUNG");
                OnARB_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _ARB_BEZEICHNUNG;
        partial void OnARB_BEZEICHNUNGChanging(global::System.String value);
        partial void OnARB_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ARB_PREIS
        {
            get
            {
                return _ARB_PREIS;
            }
            set
            {
                OnARB_PREISChanging(value);
                ReportPropertyChanging("ARB_PREIS");
                _ARB_PREIS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ARB_PREIS");
                OnARB_PREISChanged();
            }
        }
        private Nullable<global::System.Decimal> _ARB_PREIS;
        partial void OnARB_PREISChanging(Nullable<global::System.Decimal> value);
        partial void OnARB_PREISChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ARB_ABL", "TZ_ARBEITLISTE")]
        public EntityCollection<TZ_ARBEITLISTE> TZ_ARBEITLISTE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TZ_ARBEITLISTE>("Model.FK_ARB_ABL", "TZ_ARBEITLISTE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TZ_ARBEITLISTE>("Model.FK_ARB_ABL", "TZ_ARBEITLISTE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_FAHRZEUGART")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_FAHRZEUGART : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_FAHRZEUGART object.
        /// </summary>
        /// <param name="fZA_ID">Initial value of the FZA_ID property.</param>
        /// <param name="fZA_BEZEICHNUNG">Initial value of the FZA_BEZEICHNUNG property.</param>
        /// <param name="fZA_KEY">Initial value of the FZA_KEY property.</param>
        public static TR_FAHRZEUGART CreateTR_FAHRZEUGART(global::System.Int32 fZA_ID, global::System.String fZA_BEZEICHNUNG, global::System.String fZA_KEY)
        {
            TR_FAHRZEUGART tR_FAHRZEUGART = new TR_FAHRZEUGART();
            tR_FAHRZEUGART.FZA_ID = fZA_ID;
            tR_FAHRZEUGART.FZA_BEZEICHNUNG = fZA_BEZEICHNUNG;
            tR_FAHRZEUGART.FZA_KEY = fZA_KEY;
            return tR_FAHRZEUGART;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZA_ID
        {
            get
            {
                return _FZA_ID;
            }
            set
            {
                if (_FZA_ID != value)
                {
                    OnFZA_IDChanging(value);
                    ReportPropertyChanging("FZA_ID");
                    _FZA_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZA_ID");
                    OnFZA_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZA_ID;
        partial void OnFZA_IDChanging(global::System.Int32 value);
        partial void OnFZA_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FZA_BEZEICHNUNG
        {
            get
            {
                return _FZA_BEZEICHNUNG;
            }
            set
            {
                OnFZA_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("FZA_BEZEICHNUNG");
                _FZA_BEZEICHNUNG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FZA_BEZEICHNUNG");
                OnFZA_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _FZA_BEZEICHNUNG;
        partial void OnFZA_BEZEICHNUNGChanging(global::System.String value);
        partial void OnFZA_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FZA_KEY
        {
            get
            {
                return _FZA_KEY;
            }
            set
            {
                OnFZA_KEYChanging(value);
                ReportPropertyChanging("FZA_KEY");
                _FZA_KEY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FZA_KEY");
                OnFZA_KEYChanged();
            }
        }
        private global::System.String _FZA_KEY;
        partial void OnFZA_KEYChanging(global::System.String value);
        partial void OnFZA_KEYChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZA_FZG", "T_FAHRZEUG")]
        public EntityCollection<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_FAHRZEUG>("Model.FK_FZA_FZG", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_FAHRZEUG>("Model.FK_FZA_FZG", "T_FAHRZEUG", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_FAHRZEUGMARKE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_FAHRZEUGMARKE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_FAHRZEUGMARKE object.
        /// </summary>
        /// <param name="fZM_ID">Initial value of the FZM_ID property.</param>
        /// <param name="fZM_BEZEICHNUNG">Initial value of the FZM_BEZEICHNUNG property.</param>
        public static TR_FAHRZEUGMARKE CreateTR_FAHRZEUGMARKE(global::System.Int32 fZM_ID, global::System.String fZM_BEZEICHNUNG)
        {
            TR_FAHRZEUGMARKE tR_FAHRZEUGMARKE = new TR_FAHRZEUGMARKE();
            tR_FAHRZEUGMARKE.FZM_ID = fZM_ID;
            tR_FAHRZEUGMARKE.FZM_BEZEICHNUNG = fZM_BEZEICHNUNG;
            return tR_FAHRZEUGMARKE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZM_ID
        {
            get
            {
                return _FZM_ID;
            }
            set
            {
                if (_FZM_ID != value)
                {
                    OnFZM_IDChanging(value);
                    ReportPropertyChanging("FZM_ID");
                    _FZM_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZM_ID");
                    OnFZM_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZM_ID;
        partial void OnFZM_IDChanging(global::System.Int32 value);
        partial void OnFZM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FZM_BEZEICHNUNG
        {
            get
            {
                return _FZM_BEZEICHNUNG;
            }
            set
            {
                OnFZM_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("FZM_BEZEICHNUNG");
                _FZM_BEZEICHNUNG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FZM_BEZEICHNUNG");
                OnFZM_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _FZM_BEZEICHNUNG;
        partial void OnFZM_BEZEICHNUNGChanging(global::System.String value);
        partial void OnFZM_BEZEICHNUNGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZM_FZT", "TZ_FAHRZEUGTYP")]
        public EntityCollection<TZ_FAHRZEUGTYP> TZ_FAHRZEUGTYP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TZ_FAHRZEUGTYP>("Model.FK_FZM_FZT", "TZ_FAHRZEUGTYP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TZ_FAHRZEUGTYP>("Model.FK_FZM_FZT", "TZ_FAHRZEUGTYP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TR_MATERIAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TR_MATERIAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TR_MATERIAL object.
        /// </summary>
        /// <param name="mAT_ID">Initial value of the MAT_ID property.</param>
        public static TR_MATERIAL CreateTR_MATERIAL(global::System.Int32 mAT_ID)
        {
            TR_MATERIAL tR_MATERIAL = new TR_MATERIAL();
            tR_MATERIAL.MAT_ID = mAT_ID;
            return tR_MATERIAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MAT_ID
        {
            get
            {
                return _MAT_ID;
            }
            set
            {
                if (_MAT_ID != value)
                {
                    OnMAT_IDChanging(value);
                    ReportPropertyChanging("MAT_ID");
                    _MAT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MAT_ID");
                    OnMAT_IDChanged();
                }
            }
        }
        private global::System.Int32 _MAT_ID;
        partial void OnMAT_IDChanging(global::System.Int32 value);
        partial void OnMAT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MAT_BEZEICHNUNG
        {
            get
            {
                return _MAT_BEZEICHNUNG;
            }
            set
            {
                OnMAT_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("MAT_BEZEICHNUNG");
                _MAT_BEZEICHNUNG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MAT_BEZEICHNUNG");
                OnMAT_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _MAT_BEZEICHNUNG;
        partial void OnMAT_BEZEICHNUNGChanging(global::System.String value);
        partial void OnMAT_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MAT_PREIS
        {
            get
            {
                return _MAT_PREIS;
            }
            set
            {
                OnMAT_PREISChanging(value);
                ReportPropertyChanging("MAT_PREIS");
                _MAT_PREIS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAT_PREIS");
                OnMAT_PREISChanged();
            }
        }
        private Nullable<global::System.Decimal> _MAT_PREIS;
        partial void OnMAT_PREISChanging(Nullable<global::System.Decimal> value);
        partial void OnMAT_PREISChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MAT_MARGE
        {
            get
            {
                return _MAT_MARGE;
            }
            set
            {
                OnMAT_MARGEChanging(value);
                ReportPropertyChanging("MAT_MARGE");
                _MAT_MARGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MAT_MARGE");
                OnMAT_MARGEChanged();
            }
        }
        private Nullable<global::System.Decimal> _MAT_MARGE;
        partial void OnMAT_MARGEChanging(Nullable<global::System.Decimal> value);
        partial void OnMAT_MARGEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_MAT_MTL", "TZ_MATERIALLISTE")]
        public EntityCollection<TZ_MATERIALLISTE> TZ_MATERIALLISTE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TZ_MATERIALLISTE>("Model.FK_MAT_MTL", "TZ_MATERIALLISTE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TZ_MATERIALLISTE>("Model.FK_MAT_MTL", "TZ_MATERIALLISTE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TZ_ARBEITLISTE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TZ_ARBEITLISTE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TZ_ARBEITLISTE object.
        /// </summary>
        /// <param name="aBL_ID">Initial value of the ABL_ID property.</param>
        public static TZ_ARBEITLISTE CreateTZ_ARBEITLISTE(global::System.Int32 aBL_ID)
        {
            TZ_ARBEITLISTE tZ_ARBEITLISTE = new TZ_ARBEITLISTE();
            tZ_ARBEITLISTE.ABL_ID = aBL_ID;
            return tZ_ARBEITLISTE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ABL_ID
        {
            get
            {
                return _ABL_ID;
            }
            set
            {
                if (_ABL_ID != value)
                {
                    OnABL_IDChanging(value);
                    ReportPropertyChanging("ABL_ID");
                    _ABL_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ABL_ID");
                    OnABL_IDChanged();
                }
            }
        }
        private global::System.Int32 _ABL_ID;
        partial void OnABL_IDChanging(global::System.Int32 value);
        partial void OnABL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ABL_MENGE
        {
            get
            {
                return _ABL_MENGE;
            }
            set
            {
                OnABL_MENGEChanging(value);
                ReportPropertyChanging("ABL_MENGE");
                _ABL_MENGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ABL_MENGE");
                OnABL_MENGEChanged();
            }
        }
        private Nullable<global::System.Decimal> _ABL_MENGE;
        partial void OnABL_MENGEChanging(Nullable<global::System.Decimal> value);
        partial void OnABL_MENGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ABL_ARB_ID
        {
            get
            {
                return _ABL_ARB_ID;
            }
            set
            {
                OnABL_ARB_IDChanging(value);
                ReportPropertyChanging("ABL_ARB_ID");
                _ABL_ARB_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ABL_ARB_ID");
                OnABL_ARB_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ABL_ARB_ID;
        partial void OnABL_ARB_IDChanging(Nullable<global::System.Int32> value);
        partial void OnABL_ARB_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ABL_REP_ID
        {
            get
            {
                return _ABL_REP_ID;
            }
            set
            {
                OnABL_REP_IDChanging(value);
                ReportPropertyChanging("ABL_REP_ID");
                _ABL_REP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ABL_REP_ID");
                OnABL_REP_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _ABL_REP_ID;
        partial void OnABL_REP_IDChanging(Nullable<global::System.Int32> value);
        partial void OnABL_REP_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_REP_ABL", "T_REPARATUR")]
        public T_REPARATUR T_REPARATUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REPARATUR>("Model.FK_REP_ABL", "T_REPARATUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REPARATUR>("Model.FK_REP_ABL", "T_REPARATUR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_REPARATUR> T_REPARATURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REPARATUR>("Model.FK_REP_ABL", "T_REPARATUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_REPARATUR>("Model.FK_REP_ABL", "T_REPARATUR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ARB_ABL", "TR_ARBEIT")]
        public TR_ARBEIT TR_ARBEIT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_ARBEIT>("Model.FK_ARB_ABL", "TR_ARBEIT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_ARBEIT>("Model.FK_ARB_ABL", "TR_ARBEIT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TR_ARBEIT> TR_ARBEITReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_ARBEIT>("Model.FK_ARB_ABL", "TR_ARBEIT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TR_ARBEIT>("Model.FK_ARB_ABL", "TR_ARBEIT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TZ_FAHRZEUGTYP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TZ_FAHRZEUGTYP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TZ_FAHRZEUGTYP object.
        /// </summary>
        /// <param name="fZT_ID">Initial value of the FZT_ID property.</param>
        public static TZ_FAHRZEUGTYP CreateTZ_FAHRZEUGTYP(global::System.Int32 fZT_ID)
        {
            TZ_FAHRZEUGTYP tZ_FAHRZEUGTYP = new TZ_FAHRZEUGTYP();
            tZ_FAHRZEUGTYP.FZT_ID = fZT_ID;
            return tZ_FAHRZEUGTYP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FZT_ID
        {
            get
            {
                return _FZT_ID;
            }
            set
            {
                if (_FZT_ID != value)
                {
                    OnFZT_IDChanging(value);
                    ReportPropertyChanging("FZT_ID");
                    _FZT_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FZT_ID");
                    OnFZT_IDChanged();
                }
            }
        }
        private global::System.Int32 _FZT_ID;
        partial void OnFZT_IDChanging(global::System.Int32 value);
        partial void OnFZT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FZT_BEZEICHNUNG
        {
            get
            {
                return _FZT_BEZEICHNUNG;
            }
            set
            {
                OnFZT_BEZEICHNUNGChanging(value);
                ReportPropertyChanging("FZT_BEZEICHNUNG");
                _FZT_BEZEICHNUNG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FZT_BEZEICHNUNG");
                OnFZT_BEZEICHNUNGChanged();
            }
        }
        private global::System.String _FZT_BEZEICHNUNG;
        partial void OnFZT_BEZEICHNUNGChanging(global::System.String value);
        partial void OnFZT_BEZEICHNUNGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FZT_FZM_ID
        {
            get
            {
                return _FZT_FZM_ID;
            }
            set
            {
                OnFZT_FZM_IDChanging(value);
                ReportPropertyChanging("FZT_FZM_ID");
                _FZT_FZM_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FZT_FZM_ID");
                OnFZT_FZM_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _FZT_FZM_ID;
        partial void OnFZT_FZM_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFZT_FZM_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZT_FZG", "T_FAHRZEUG")]
        public EntityCollection<T_FAHRZEUG> T_FAHRZEUG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_FAHRZEUG>("Model.FK_FZT_FZG", "T_FAHRZEUG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_FAHRZEUG>("Model.FK_FZT_FZG", "T_FAHRZEUG", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FZM_FZT", "TR_FAHRZEUGMARKE")]
        public TR_FAHRZEUGMARKE TR_FAHRZEUGMARKE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGMARKE>("Model.FK_FZM_FZT", "TR_FAHRZEUGMARKE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGMARKE>("Model.FK_FZM_FZT", "TR_FAHRZEUGMARKE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TR_FAHRZEUGMARKE> TR_FAHRZEUGMARKEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_FAHRZEUGMARKE>("Model.FK_FZM_FZT", "TR_FAHRZEUGMARKE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TR_FAHRZEUGMARKE>("Model.FK_FZM_FZT", "TR_FAHRZEUGMARKE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TZ_MATERIALLISTE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TZ_MATERIALLISTE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TZ_MATERIALLISTE object.
        /// </summary>
        /// <param name="mTL_ID">Initial value of the MTL_ID property.</param>
        public static TZ_MATERIALLISTE CreateTZ_MATERIALLISTE(global::System.Int32 mTL_ID)
        {
            TZ_MATERIALLISTE tZ_MATERIALLISTE = new TZ_MATERIALLISTE();
            tZ_MATERIALLISTE.MTL_ID = mTL_ID;
            return tZ_MATERIALLISTE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MTL_ID
        {
            get
            {
                return _MTL_ID;
            }
            set
            {
                if (_MTL_ID != value)
                {
                    OnMTL_IDChanging(value);
                    ReportPropertyChanging("MTL_ID");
                    _MTL_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MTL_ID");
                    OnMTL_IDChanged();
                }
            }
        }
        private global::System.Int32 _MTL_ID;
        partial void OnMTL_IDChanging(global::System.Int32 value);
        partial void OnMTL_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MTL_MENGE
        {
            get
            {
                return _MTL_MENGE;
            }
            set
            {
                OnMTL_MENGEChanging(value);
                ReportPropertyChanging("MTL_MENGE");
                _MTL_MENGE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MTL_MENGE");
                OnMTL_MENGEChanged();
            }
        }
        private Nullable<global::System.Decimal> _MTL_MENGE;
        partial void OnMTL_MENGEChanging(Nullable<global::System.Decimal> value);
        partial void OnMTL_MENGEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MTL_MAT_ID
        {
            get
            {
                return _MTL_MAT_ID;
            }
            set
            {
                OnMTL_MAT_IDChanging(value);
                ReportPropertyChanging("MTL_MAT_ID");
                _MTL_MAT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MTL_MAT_ID");
                OnMTL_MAT_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _MTL_MAT_ID;
        partial void OnMTL_MAT_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMTL_MAT_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MTL_REP_ID
        {
            get
            {
                return _MTL_REP_ID;
            }
            set
            {
                OnMTL_REP_IDChanging(value);
                ReportPropertyChanging("MTL_REP_ID");
                _MTL_REP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MTL_REP_ID");
                OnMTL_REP_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _MTL_REP_ID;
        partial void OnMTL_REP_IDChanging(Nullable<global::System.Int32> value);
        partial void OnMTL_REP_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_REP_MTL", "T_REPARATUR")]
        public T_REPARATUR T_REPARATUR
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REPARATUR>("Model.FK_REP_MTL", "T_REPARATUR").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REPARATUR>("Model.FK_REP_MTL", "T_REPARATUR").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_REPARATUR> T_REPARATURReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REPARATUR>("Model.FK_REP_MTL", "T_REPARATUR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_REPARATUR>("Model.FK_REP_MTL", "T_REPARATUR", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_MAT_MTL", "TR_MATERIAL")]
        public TR_MATERIAL TR_MATERIAL
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_MATERIAL>("Model.FK_MAT_MTL", "TR_MATERIAL").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_MATERIAL>("Model.FK_MAT_MTL", "TR_MATERIAL").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TR_MATERIAL> TR_MATERIALReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TR_MATERIAL>("Model.FK_MAT_MTL", "TR_MATERIAL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TR_MATERIAL>("Model.FK_MAT_MTL", "TR_MATERIAL", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
